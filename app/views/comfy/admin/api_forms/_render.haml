%link{:crossorigin => "anonymous", :href => "https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.0.0/jsoneditor.css", :integrity => "sha512-Mfp9P5Ln+lF/PmixCJBHUNHXoBKJwKY2i7oZ29iu/mnN47puo0TH/ORb3vgrdkyuBkLaDytv80480FNZxllpyQ==", :referrerpolicy => "no-referrer", :rel => "stylesheet"}/
%script{:crossorigin => "anonymous", :integrity => "sha512-xEv8uIENS4DGY7Ml/Cv6+sbcPXiRAguIgU8Sv0FCUUdrNC7aRhWbOglm7lnzhnA3spqCr8DnTMTMNFW4jhM8gA==", :referrerpolicy => "no-referrer", :src => "https://cdnjs.cloudflare.com/ajax/libs/jsoneditor/9.0.0/jsoneditor.js"}
- properties = @api_namespace.properties.symbolize_keys
- form_properties = @api_form.properties.symbolize_keys

-# There must be recaptcha keys set if recaptcha v2/v3 is used in the api_form.
- recaptcha_keys_set = @api_form.show_recaptcha && Recaptcha.configuration.site_key.present? && Recaptcha.configuration.secret_key.present?
- recaptcha_keys_set = @api_form.show_recaptcha_v3 && ENV['RECAPTCHA_SITE_KEY_V3'].present? && ENV['RECAPTCHA_SECRET_KEY_V3'].present? unless recaptcha_keys_set

- if (@api_form.show_recaptcha.blank? && @api_form.show_recaptcha_v3.blank?) || recaptcha_keys_set
  = form_for :data, url: api_namespace_resource_index_path(api_namespace_id: @api_namespace.id), method: :post, html: {class: 'violet-cta-form', 'data-type': 'json', multipart: true, id: "api_form_#{@api_namespace.id}", onsubmit: 'disableForm(this); return checkRequiredRichTextFields()'}, data: { turbo: false, remote: true } do |f|
    .form-group
      - properties.each do |key, value|
        = f.fields_for :properties do |fff|
          - if @api_form.is_field_renderable?(key)
            .form-group{class: "vr-#{key}"}
              = fff.label key, form_properties[key]["label"]
              = map_form_field(fff, key, value, form_properties)
      - @api_namespace.non_primitive_properties.each_with_index do |property, index|
        = fields_for "data[non_primitive_properties_attributes][#{index}]", property do |ff|
          .form-group{class: "vr-#{ff.object.label} #{'disable-trix-file-attachment' unless ff.object.allow_attachments}"}
            = label_tag property.label
            = map_non_primitive_data_type(ff, property.field_type, form_properties)
            - if property.field_type == 'file'
              .mt-3
                %video{id: "#{property.label.parameterize.underscore}_preview_video", controls: true, style: "max-height: 150px; display: none"}
                %img{id: "#{property.label.parameterize.underscore}_preview_img", controls: true,  style: "max-height: 150px; display: none"}
          = ff.hidden_field :field_type
          = ff.hidden_field :label
          = ff.hidden_field :allow_attachments
      
    - if @api_form.show_recaptcha
      = recaptcha_tags callback: 'ctaSuccessHandler'
    - elsif @api_form.show_recaptcha_v3
      -# Hiding the recaptch v3 badge.
      -# reference: https://developers.google.com/recaptcha/docs/faq#id-like-to-hide-the-recaptcha-badge.-what-is-allowed
      :css
        .grecaptcha-badge {
          visibility: hidden;
        }

      %div{ style: "font-size: small;" }
        * This site is protected by Google
        = link_to 'reCAPTCHA.', 'https://www.google.com/recaptcha/about/', target: '_blank'
        By submitting this form, you agree to Google's
        = link_to 'Privacy Policy', 'https://policies.google.com/privacy', target: '_blank'
        and
        = link_to 'Terms of Service.', 'https://policies.google.com/terms', target: '_blank'

      = recaptcha_v3(callback: 'ctaSuccessHandlerRecaptchaV3', action: sanitize_recaptcha_action_name(@api_namespace.name), site_key: ENV['RECAPTCHA_SITE_KEY_V3'])
      
    = f.submit @api_form.submit_button_label, disabled: @api_form.show_recaptcha || @api_form.show_recaptcha_v3, class: 'my-2 btn btn-primary', data: {disable_with: false}

- else 
  %h3.text-danger{ style: "font-size: small;" }
    * No recaptcha keys are defined. Please set the required keys or unselect recaptcha option for this form.

= render 'comfy/admin/api_namespaces/richtext_form_validations'

:javascript
  $(document).ready( function() {
    $('.array_select').each(function() {
      $(this).select2({
        multiple: true,
        required: true,
        placeholder: $(this).attr('placeholder'),
        tags: $(this).attr('data-tags')
      })
      $(this).val(JSON.parse($(this).attr('default_value'))).change();
    });
  });

- execute_actions(@api_namespace, 'new_api_actions')