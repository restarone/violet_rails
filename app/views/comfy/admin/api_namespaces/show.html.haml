.api-namespace-show.px-md-2
  .d-sm-flex.justify-content-between.align-items-center.py-2.page-header
    %h2
      Listing
      =  @api_namespace.name.pluralize
    %div
      = link_to "Create new #{@api_namespace.name.singularize}", new_api_namespace_resource_path(api_namespace_id: @api_namespace.id), class: 'btn btn-primary w-100 w-md-auto my-2'

  .nav-link-container
    %ul.nav.nav-tabs{:role => "tablist"}
      %li.nav-item
        %a#api-resources-tab.nav-link.active{"aria-controls" => "api-resources", "aria-selected" => "true", "data-toggle" => "tab", :href => "#api-resources", :role => "tab"} 
          API Resources
      %li.nav-item
        %a#interface-tab.nav-link{"aria-controls" => "interface", "aria-selected" => "false", "data-toggle" => "tab", :href => "#interface", :role => "tab"} 
          Interface
      %li.nav-item
        %a#connections-tab.nav-link{:href => api_namespace_external_api_clients_path(api_namespace_id: @api_namespace.id)} 
          Connections
      - if @api_namespace.api_form.present?
        %li.nav-item
          %a#form-tab.nav-link{"aria-controls" => "form", "aria-selected" => "false", "data-toggle" => "tab", :href => "#form", :role => "tab"} 
            Rendering
      %li.nav-item
        %a#actions-tab.nav-link{:href => api_namespace_api_actions_path(api_namespace_id: @api_namespace.id)}
          Actions
      %li.nav-item
        %a#settings-tab.nav-link{"aria-controls" => "settings", "aria-selected" => "false", "data-toggle" => "tab", :href => "#settings", :role => "tab"} 
          Settings
      %li.nav-item
        %a#export-tab.nav-link{"aria-controls" => "export", "aria-selected" => "false", "data-toggle" => "tab", :href => "#export", :role => "tab"} 
          Export
      %li.nav-item
        %a#cms-associations-tab.nav-link{"aria-controls" => "export", "aria-selected" => "false", "data-toggle" => "tab", :href => "#cms-associations", :role => "tab"} 
          CMS Associations
      %li.nav-item
        %a#social-tab.nav-link{"aria-controls" => "social", "aria-selected" => "false", "data-toggle" => "tab", :href => "#social", :role => "tab"} 
          Social Share Mapping
      %li.nav-item
        %a#analytics-mapping-tab.nav-link{"aria-controls" => "analytics-mapping", "aria-selected" => "false", "data-toggle" => "tab", :href => "#analytics-mapping", :role => "tab"} 
          Analytics Mapping

  .tab-content
    #api-resources.tab-pane.fade.show.active{"aria-labelledby" => "api-resources-tab", :role => "tabpanel"} 
      = render partial: 'comfy/admin/api_namespaces/api_resources/index'

    #interface.tab-pane.fade{"aria-labelledby" => "interface-tab", :role => "tabpanel"} 
      = render partial: 'interface', locals: { api_namespace: @api_namespace }

    - if @api_namespace.api_form.present?
      #form.tab-pane.fade{"aria-labelledby" => "form-tab", :role => "tabpanel"}
        .card.bg-white
          .card-body
            %p
              %b Form rendering snippet:  
            %pre= @api_namespace.snippet
            %p
              %b API HTML Renderer index snippet:
            %pre= "{{ cms:helper render_api_namespace_resource_index '#{@api_namespace.slug}', scope: { properties: #{api_html_renderer_dynamic_properties(@api_namespace)} } }}"
            %p
              %b API HTML Renderer index snippet (KEYWORDS - works for array and string data type only):
            %pre= "{{ cms:helper render_api_namespace_resource_index '#{@api_namespace.slug}', scope: { properties: #{api_html_renderer_dynamic_properties(@api_namespace, 'KEYWORDS')} } }}"
            %p
              %b API HTML Renderer show snippet:
            %pre= "{{ cms:helper render_api_namespace_resource '#{@api_namespace.slug}', scope: { properties: #{api_html_renderer_dynamic_properties(@api_namespace)} } }}"
            %p
              %b API HTML Renderer show snippet (KEYWORDS - works for array and string data type only):
            %pre= "{{ cms:helper render_api_namespace_resource '#{@api_namespace.slug}', scope: { properties: #{api_html_renderer_dynamic_properties(@api_namespace, 'KEYWORDS')} } }}"
            
        .d-flex.justify-content-between.my-3
          %b Preview (outer border is present in preview only):
          %div
            = link_to 'Edit', edit_api_namespace_api_form_path(api_namespace_id: @api_namespace.id, id: @api_namespace.api_form.id)

        .card.bg-white
          .card-body
            = render_form @api_namespace.api_form.id

    #settings.tab-pane.fade{"aria-labelledby" => "settings-tab", :role => "tabpanel"} 
      = render partial: 'settings', locals: { api_namespace: @api_namespace }

    #export.tab-pane.fade{"aria-labelledby" => "export-tab", :role => "tabpanel"} 
      .my-3
        = link_to 'Download API Namespace as CSV', export_api_namespace_path(@api_namespace, format: :csv), class: 'btn btn-warning'
      .my-3
        = link_to 'Download API Resources as CSV', export_api_resources_api_namespace_path(@api_namespace, format: :csv), class: 'btn btn-warning'
      .my-3
        = link_to 'Export JSON with associations', export_with_associations_as_json_api_namespace_path(id: @api_namespace.id), method: :get, class: 'btn btn-info'
      .my-3
        = link_to 'Export JSON without associations', export_without_associations_as_json_api_namespace_path(id: @api_namespace.id), method: :get, class: 'btn btn-info'

    #cms-associations.tab-pane.fade{"aria-labelledby" => "cms-associations-tab", :role => "tabpanel"} 
      - if (cms_associations = @api_namespace.cms_associations).present?
        - page_associations = cms_associations.select { |association| association.class.to_s == 'Comfy::Cms::Page' }
        - snippet_associations = cms_associations.select { |association| association.class.to_s == 'Comfy::Cms::Snippet' }
        - layout_associations = cms_associations.select { |association| association.class.to_s == 'Comfy::Cms::Layout' }

        .card.my-1
          .card-body
            .card-title.font-weight-bold
              CMS Pages
            - if page_associations.present?
              %ul.list-group.ml-3
                - page_associations.each do |page|
                  %li
                    = link_to page.label, edit_comfy_admin_cms_site_page_path(site_id: page.site.id, id: page.id), target: '_blank'
            - else
              No Cms::Page associations for this api-namespace
        .card.my-1
          .card-body
            .card-title.font-weight-bold
              CMS Snippet
            - if snippet_associations.present?
              %ul.list-group.ml-3
                - snippet_associations.each do |snippet|
                  %li
                    = link_to snippet.label, edit_comfy_admin_cms_site_snippet_path(site_id: snippet.site.id, id: snippet.id), target: '_blank'
            - else
              No Cms::Snippet associations for this api-namespace
        .card.my-1
          .card-body
            .card-title.font-weight-bold
              CMS Layouts
            - if layout_associations.present?
              %ul.list-group.ml-3
                - layout_associations.each do |layout|
                  %li
                    = link_to layout.label, edit_comfy_admin_cms_site_layout_path(site_id: layout.site.id, id: layout.id), target: '_blank'
            - else
              No Cms::Layout associations for this api-namespace

      - else
        .card.my-1
          .card-body
            No CMS associations for this api-namespace

    #social.tab-pane.fade{"aria-labelledby" => "social-tab", :role => "tabpanel"} 
      .card.bg-white 
        .card-body
          = form_with(method: :patch , url: social_share_metadata_api_namespace_path(@api_namespace))  do |f|
            .form-group
              = f.label :title
              = f.select 'api_namespace[social_share_metadata][title]', options_for_select(@api_namespace.properties.keys,(@api_namespace.social_share_metadata.present? ? @api_namespace.social_share_metadata["title"] : nil)),{include_blank: "Choose an option"}, {class: 'form-control'}
            .form-group
              = f.label :description
              = f.select 'api_namespace[social_share_metadata][description]', options_for_select(@api_namespace.properties.keys,(@api_namespace.social_share_metadata.present? ? @api_namespace.social_share_metadata["description"] : nil)),{include_blank: "Choose an option"}, {class: 'form-control'}
            .form-group
              = f.label :image
              = f.select 'api_namespace[social_share_metadata][image]', options_for_select(@image_options,(@api_namespace.social_share_metadata.present? ? @api_namespace.social_share_metadata["image"] : nil)),{include_blank: "Choose an option"}, {class: 'form-control'}
            .form-group.mb-0
              = f.submit "Submit", class: 'btn btn-primary'

    #analytics-mapping.tab-pane.fade{"aria-labelledby" => "analytics-mapping-tab", :role => "tabpanel"} 
      .card.bg-white
        .card-body
          = form_with(method: :patch , url: analytics_metadata_api_namespace_path(@api_namespace))  do |f|
            .form-group
              = f.label :title
              = f.select 'api_namespace[analytics_metadata][title]', options_for_select(@api_namespace.properties.keys,(@api_namespace.analytics_metadata&.dig('title'))),{include_blank: "Choose an option"}, {class: 'form-control'}
            .form-group
              = f.label :author
              = f.select 'api_namespace[analytics_metadata][author]', options_for_select(@api_namespace.properties.keys,(@api_namespace.analytics_metadata&.dig('author'))),{include_blank: "Choose an option"}, {class: 'form-control'}
            .form-group
              = f.label :thumbnail
              = f.select 'api_namespace[analytics_metadata][thumbnail]', options_for_select(@image_options,(@api_namespace.analytics_metadata&.dig('thumbnail'))),{include_blank: "Choose an option"}, {class: 'form-control'}
            .form-group.mb-0
              = f.submit "Submit", class: 'btn btn-primary'



  .api-namespace-attributes
    = link_to 'Edit', edit_api_namespace_path(@api_namespace)
    \|
    = link_to 'Back', api_namespaces_path

    %p#notice= notice

    %p
      %b Name:
      = @api_namespace.name
    %p
      %b Version:
      = @api_namespace.version
    %p
      %b Properties:
    #jsoneditor{data: { violet_jsoneditor: true, mode: 'view', target: 'api_namespace_properties' }}
    = hidden_field_tag :api_namespace_properties, @api_namespace.properties&.to_json