= link_to 'Edit', edit_api_namespace_path(@api_namespace)
\|
= link_to 'Back', api_namespaces_path

%p#notice= notice

%p
  %b Name:
  = @api_namespace.name
%p
  %b Version:
  = @api_namespace.version
%p
  %b Properties:
#jsoneditor
= hidden_field_tag :api_namespace_properties, @api_namespace.properties&.to_json

= render 'init_editor', {read_only: true}

%ul.nav.my-2.nav-tabs{:role => "tablist"}
  %li.nav-item
    %a#interface-tab.nav-link.active{"aria-controls" => "interface", "aria-selected" => "true", "data-toggle" => "tab", :href => "#interface", :role => "tab"} 
      Interface
  %li.nav-item
    %a#connections-tab.nav-link{:href => api_namespace_external_api_clients_path(api_namespace_id: @api_namespace.id)} 
      Connections
  - if @api_namespace.api_form.present?
    %li.nav-item
      %a#form-tab.nav-link{"aria-controls" => "form", "aria-selected" => "false", "data-toggle" => "tab", :href => "#form", :role => "tab"} 
        Rendering
  %li.nav-item
    %a#actions-tab.nav-link{:href => api_namespace_api_actions_path(api_namespace_id: @api_namespace.id)}
      Actions
  %li.nav-item
    %a#settings-tab.nav-link{"aria-controls" => "settings", "aria-selected" => "false", "data-toggle" => "tab", :href => "#settings", :role => "tab"} 
      Settings
  %li.nav-item
    %a#export-tab.nav-link{"aria-controls" => "export", "aria-selected" => "false", "data-toggle" => "tab", :href => "#export", :role => "tab"} 
      Export
  %li.nav-item
    %a#cms-associations-tab.nav-link{"aria-controls" => "export", "aria-selected" => "false", "data-toggle" => "tab", :href => "#cms-associations", :role => "tab"} 
      CMS Associations
  %li.nav-item
    %a#social-tab.nav-link{"aria-controls" => "social", "aria-selected" => "false", "data-toggle" => "tab", :href => "#social", :role => "tab"} 
      Social Share Mapping
  %li.nav-item
    %a#analytics-mapping-tab.nav-link{"aria-controls" => "analytics-mapping", "aria-selected" => "false", "data-toggle" => "tab", :href => "#analytics-mapping", :role => "tab"} 
      Analytics Mapping

.tab-content
  #interface.tab-pane.fade.show.active{"aria-labelledby" => "interface-tab", :role => "tabpanel"} 
    .card.p-3
      %p
        %b Requires authentication:
        = @api_namespace.requires_authentication
      %p
        %b Namespace type:
        = @api_namespace.namespace_type

      .card
        .card-body
          = render partial: 'rest_interface', locals: { api_namespace: @api_namespace } 

        .card-body
          %h4
            Graph Interface
          %strong
            Request description endpoint:
          %p
            GET
          %pre
            = "#{graphql_base_url(Subdomain.current, @api_namespace)}/describe"

          %strong
            Request query endpoint:
          %p
            POST
          %pre
            = "#{graphql_base_url(Subdomain.current, @api_namespace)}"
          %p
            Payload (this)
          %pre
            = "query: { apiNamespaces(slug: \"#{@api_namespace.slug}\") { id } }"
          %p
            Payload (this + children)
          %pre
            = "query: { apiNamespaces(slug: \"#{@api_namespace.slug}\") { id apiResources { id } } }"
          %p
            Payload (global)
          %pre
            = "query: { apiNamespaces { id } }"
        .card-body
          %h4
            Webhook
          .table-responsive
            %table
              %thead
                %tr
                  %th.px-3 API Connection
                  %th.px-3 HTTP method
                  %th.px-3 Webhook Interface
                  %th.px-3 Verification Method
              %tbody
                - @api_namespace.external_api_clients.where(drive_strategy: ExternalApiClient::DRIVE_STRATEGIES[:webhook]).each do |external_api_client|
                  %tr
                    %td.px-3= link_to external_api_client.label, api_namespace_external_api_client_path(api_namespace_id: external_api_client.api_namespace.id, id: external_api_client.id)
                    %td.px-3 POST
                    %td.px-3= api_external_api_client_webhook_url(version: external_api_client.api_namespace.version, api_namespace: external_api_client.api_namespace.slug, external_api_client: external_api_client.slug)
                    %td.px-3= external_api_client.webhook_verification_method&.webhook_type

  - if @api_namespace.api_form.present?
    #form.tab-pane.fade{"aria-labelledby" => "form-tab", :role => "tabpanel"}
      %p
        %b Form rendering snippet:  
      %pre= @api_namespace.snippet
      %p
        %b API HTML Renderer index snippet:
      %pre= "{{ cms:helper render_api_namespace_resource_index '#{@api_namespace.slug}', scope: { properties: #{@custom_properties} } }}"
      %p
        %b API HTML Renderer show snippet:
      %pre= "{{ cms:helper render_api_namespace_resource '#{@api_namespace.slug}', scope: { properties: #{@custom_properties} } }}"
      %p
        .d-flex.justify-content-between
          %b Preview (outer border is present in preview only):
          %div
            = link_to 'Edit', edit_api_namespace_api_form_path(api_namespace_id: @api_namespace.id, id: @api_namespace.api_form.id)
      .card.p-3
        = render_form @api_namespace.api_form.id
  #settings.tab-pane.fade{"aria-labelledby" => "settings-tab", :role => "tabpanel"} 
    .my-3
      = link_to 'Delete', @api_namespace, method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-danger'
    .my-3
      = link_to 'Duplicate with associations', duplicate_with_associations_api_namespace_path(id: @api_namespace.id), method: :post, target: '_blank', class: 'btn btn-primary'
    .my-3
      = link_to 'Duplicate without associations', duplicate_without_associations_api_namespace_path(id: @api_namespace.id), method: :post, target: '_blank', class: 'btn btn-primary'
  #export.tab-pane.fade{"aria-labelledby" => "export-tab", :role => "tabpanel"} 
    .my-3
      = link_to 'Download API Namespace as CSV', export_api_namespace_path(@api_namespace, format: :csv), class: 'btn btn-warning'
    .my-3
      = link_to 'Download API Resources as CSV', export_api_resources_api_namespace_path(@api_namespace, format: :csv), class: 'btn btn-warning'
    .my-3
      = link_to 'Export JSON with associations', export_with_associations_as_json_api_namespace_path(id: @api_namespace.id), method: :get, class: 'btn btn-info'
    .my-3
      = link_to 'Export JSON without associations', export_without_associations_as_json_api_namespace_path(id: @api_namespace.id), method: :get, class: 'btn btn-info'
  #cms-associations.tab-pane.fade{"aria-labelledby" => "cms-associations-tab", :role => "tabpanel"} 
    - if (cms_associations = @api_namespace.cms_associations).present?
      - page_associations = cms_associations.select { |association| association.class.to_s == 'Comfy::Cms::Page' }
      - snippet_associations = cms_associations.select { |association| association.class.to_s == 'Comfy::Cms::Snippet' }
      - layout_associations = cms_associations.select { |association| association.class.to_s == 'Comfy::Cms::Layout' }

      .card.my-1
        .card-body
          .card-title.font-weight-bold
            CMS Pages
          - if page_associations.present?
            %ul.list-group.ml-3
              - page_associations.each do |page|
                %li
                  = link_to page.label, edit_comfy_admin_cms_site_page_path(site_id: page.site.id, id: page.id), target: '_blank'
          - else
            No Cms::Page associations for this api-namespace
      .card.my-1
        .card-body
          .card-title.font-weight-bold
            CMS Snippet
          - if snippet_associations.present?
            %ul.list-group.ml-3
              - snippet_associations.each do |snippet|
                %li
                  = link_to snippet.label, edit_comfy_admin_cms_site_snippet_path(site_id: snippet.site.id, id: snippet.id), target: '_blank'
          - else
            No Cms::Snippet associations for this api-namespace
      .card.my-1
        .card-body
          .card-title.font-weight-bold
            CMS Layouts
          - if layout_associations.present?
            %ul.list-group.ml-3
              - layout_associations.each do |layout|
                %li
                  = link_to layout.label, edit_comfy_admin_cms_site_layout_path(site_id: layout.site.id, id: layout.id), target: '_blank'
          - else
            No Cms::Layout associations for this api-namespace

    - else
      .card.my-1
        .card-body
          No CMS associations for this api-namespace

  #social.tab-pane.fade{"aria-labelledby" => "social-tab", :role => "tabpanel"} 
    = form_with(method: :patch , url: social_share_metadata_api_namespace_path(@api_namespace))  do |f|
      .form-group
        = f.label :title
        = f.select 'api_namespace[social_share_metadata][title]', options_for_select(@api_namespace.properties.keys,(@api_namespace.social_share_metadata.present? ? @api_namespace.social_share_metadata["title"] : nil)),{include_blank: "Choose an option"}, {class: 'form-control'}
      .form-group
        = f.label :description
        = f.select 'api_namespace[social_share_metadata][description]', options_for_select(@api_namespace.properties.keys,(@api_namespace.social_share_metadata.present? ? @api_namespace.social_share_metadata["description"] : nil)),{include_blank: "Choose an option"}, {class: 'form-control'}
      .form-group
        = f.label :image
        = f.select 'api_namespace[social_share_metadata][image]', options_for_select(@image_options,(@api_namespace.social_share_metadata.present? ? @api_namespace.social_share_metadata["image"] : nil)),{include_blank: "Choose an option"}, {class: 'form-control'}
      .form-group
        = f.submit "Submit", class: 'btn btn-primary'

  #analytics-mapping.tab-pane.fade{"aria-labelledby" => "analytics-mapping-tab", :role => "tabpanel"} 
    = form_with(method: :patch , url: analytics_metadata_api_namespace_path(@api_namespace))  do |f|
      .form-group
        = f.label :title
        = f.select 'api_namespace[analytics_metadata][title]', options_for_select(@api_namespace.properties.keys,(@api_namespace.analytics_metadata&.dig('title'))),{include_blank: "Choose an option"}, {class: 'form-control'}
      .form-group
        = f.label :author
        = f.select 'api_namespace[analytics_metadata][author]', options_for_select(@api_namespace.properties.keys,(@api_namespace.analytics_metadata&.dig('author'))),{include_blank: "Choose an option"}, {class: 'form-control'}
      .form-group
        = f.label :thumbnail
        = f.select 'api_namespace[analytics_metadata][thumbnail]', options_for_select(@image_options,(@api_namespace.analytics_metadata&.dig('thumbnail'))),{include_blank: "Choose an option"}, {class: 'form-control'}
      .form-group
        = f.submit "Submit", class: 'btn btn-primary'
      
-# We show this only if the user has full_access or access related to api-resources
- if has_access_to_api_accessibility?(ApiNamespace::API_ACCESSIBILITIES[:read_api_resources_only], current_user, @api_namespace)
  #api-resources-list.container-fluid.mt-5
    .d-flex.justify-content-between.py-2.page-header
      %h2
        Listing
        =  @api_namespace.name.pluralize
      %div
        = link_to "Create new #{@api_namespace.name.singularize}", new_api_namespace_resource_path(api_namespace_id: @api_namespace.id), class: 'btn btn-primary'

    = render partial: 'comfy/admin/api_resources/search_filters', locals: { objects: @api_resources_q, path: api_namespace_path(@api_namespace) }
    = render partial: 'pagination', locals: { objects: @api_resources }
    .table-responsive
      %table
        %thead
          %tr
            %th.px-3= sort_link @api_resources_q, :id
            %th.px-3= sort_link @api_resources_q, :created_at
            %th.px-3= sort_link @api_resources_q, :updated_at
            - dynamic_columns = @api_namespace.properties.keys
            - dynamic_columns.each do |dynamic_column|
              %th.px-3= sort_link @api_resources_q, dynamic_column
            %th.px-3
            %th.px-3
        %tbody
          - @api_resources.each do |api_resource|
            %tr
              %td.px-3.py-2= link_to api_resource.id, api_namespace_resource_path(api_namespace_id: api_resource.api_namespace_id, id: api_resource.id)
              %td.px-3= api_resource.created_at.strftime('%F %T')
              %td.px-3= api_resource.updated_at.strftime('%F %T')
              - dynamic_columns.each do |dynamic_column|
                %td.px-3= api_resource.properties[dynamic_column]
              %td.px-3= link_to 'Edit', edit_api_namespace_resource_path(api_namespace_id: api_resource.api_namespace_id, id: api_resource.id)
              %td.px-3= link_to 'Destroy', api_namespace_resource_path(api_namespace_id: api_resource.api_namespace_id, id: api_resource.id), method: :delete, data: { confirm: 'Are you sure?' }

  %br

